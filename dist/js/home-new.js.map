{"version":3,"sources":["home-new.js"],"names":["$","document","ready","a","window","scroll","p","offset","top","innerHeight","scrollTop","each","$this","countTo","attr","countNum","text","animate","duration","easing","step","Math","floor","complete","clientsay","Swiper","slidesPerView","breakpoints","navigation","nextEl","prevEl","pagination","el","breakpoint","matchMedia","mySwiper","breakpointChecker","matches","undefined","destroy","enableSwiper","centeredSlides","delay","addListener","swiper","cssMode","keyboard"],"mappings":"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","file":"home-new.js","sourcesContent":["$(document).ready(function () {\n\n\n    // number increment\n\n    var a = 0;\n    $(window).scroll(function () {\n        var p = $('#counter').offset().top - window.innerHeight;\n        if (a == 0 && $(window).scrollTop() > p) {\n            $('.counter-value').each(function () {\n                var $this = $(this),\n                    countTo = $this.attr('data-count');\n                $({\n                    countNum: $this.text()\n                }).animate({\n                    countNum: countTo\n                }, {\n\n                    duration: 4000,\n                    easing: 'swing',\n                    step: function step() {\n                        $this.text(Math.floor(this.countNum));\n                    },\n                    complete: function complete() {\n                        $this.text(this.countNum);\n                        //alert('finished');\n                    }\n\n                });\n            });\n            a = 1;\n        }\n    });\n\n    // client say //\n\n    var clientsay = new Swiper('.js-client-say', {\n        // loop: true,\n        slidesPerView: 2,\n        breakpoints: {\n            320: {\n                slidesPerView: 1.5,\n                // spaceBetween: 25,\n                // loop: true,\n            },\n\n            414: {\n                slidesPerView: 1.5,\n                // spaceBetween: 25,\n                // loop: true,\n            },\n\n            769: {\n                slidesPerView: 2.5,\n                // loop: true,\n            },\n        },\n        navigation: {\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev',\n        },\n        pagination: {\n            el: '.swiper-pagination',\n        }\n\n    });\n\n    // our capabilities Mobile-slider\n\n    (function () {\n        \"use strict\";\n        const breakpoint = window.matchMedia(\"(min-width:40.25em)\");\n\n        // keep track of swiper instances to destroy later\n        let mySwiper;\n\n        const breakpointChecker = function () {\n            // if larger viewport and multi-row layout needed\n            if (breakpoint.matches === true) {\n                // clean up old instances and inline styles when available\n                if (mySwiper !== undefined) mySwiper.destroy(true, true);\n\n                // or/and do nothing\n                return;\n\n                // else if a small viewport and single column layout needed\n            } else if (breakpoint.matches === false) {\n                // fire small viewport version of swiper\n                return enableSwiper();\n            }\n        };\n\n        // const enableSwiper = function () {\n        //     mySwiper = new Swiper(\".js-resp-capabilities\", {\n        //         loop: true,\n        //         slidesPerView: 1.5,\n        //         // a11y: true,\n        //         keyboardControl: true,\n        //         grabCursor: true,\n        //         autoplay: {\n        //             delay:1000,\n        //             disableOnInteraction: false,\n        //         },\n\n        //         // pagination\n        //         pagination: \".swiper-pagination\",\n        //         paginationClickable: true,\n        //     });\n        // };\n\n        var enableSwiper = function enableSwiper() {\n            mySwiper = new Swiper(\".js-resp-capabilities\", {                \n                slidesPerView: \"auto\",\n                centeredSlides: true,\n                slidesPerView: 1.5,\n                spaceBetween: 25,\n                loop: true,\n                speed: 2000,        \n                autoplay: {\n                    delay: 1000,                   \n                },\n                pagination: \".swiper-pagination\",\n                paginationClickable: true,\n            });\n        };\n\n        // keep an eye on viewport size changes\n        breakpoint.addListener(breakpointChecker);\n\n        // kickstart\n        breakpointChecker();\n    })(); /* IIFE end */\n\n\n    // $(\".sidebar li\").click(function (e) {\n    //     // $(\".sidebar li\").removeClass(\"active\");\n    //     alert(\"working\");\n    //     $(this).addClass(\"active\");\n    // });\n\n    var swiper = new Swiper(\".testimonial\", {\n        cssMode: true,\n        navigation: {\n          nextEl: \".swiper-button-next\",\n          prevEl: \".swiper-button-prev\",\n        },\n        pagination: {\n          el: \".swiper-pagination\",\n        },\n        // mousewheel: true,\n        keyboard: true,\n      });\n\n\n\n})\n\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
{"version":3,"sources":["home-new.js"],"names":["$","document","ready","a","window","scroll","p","offset","top","innerHeight","scrollTop","each","$this","countTo","attr","countNum","text","animate","duration","easing","step","Math","floor","complete","clientsay","Swiper","slidesPerView","breakpoints","navigation","nextEl","prevEl","pagination","el","breakpoint","matchMedia","mySwiper","breakpointChecker","matches","undefined","destroy","enableSwiper","centeredSlides","delay","addListener","swiper","cssMode","keyboard"],"mappings":"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","file":"home-new.js","sourcesContent":["$(document).ready(function () {\r\n\r\n\r\n    // number increment\r\n\r\n    var a = 0;\r\n    $(window).scroll(function () {\r\n        var p = $('#counter').offset().top - window.innerHeight;\r\n        if (a == 0 && $(window).scrollTop() > p) {\r\n            $('.counter-value').each(function () {\r\n                var $this = $(this),\r\n                    countTo = $this.attr('data-count');\r\n                $({\r\n                    countNum: $this.text()\r\n                }).animate({\r\n                    countNum: countTo\r\n                }, {\r\n\r\n                    duration: 4000,\r\n                    easing: 'swing',\r\n                    step: function step() {\r\n                        $this.text(Math.floor(this.countNum));\r\n                    },\r\n                    complete: function complete() {\r\n                        $this.text(this.countNum);\r\n                        //alert('finished');\r\n                    }\r\n\r\n                });\r\n            });\r\n            a = 1;\r\n        }\r\n    });\r\n\r\n    // client say //\r\n\r\n    var clientsay = new Swiper('.js-client-say', {\r\n        // loop: true,\r\n        slidesPerView: 2,\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 1.5,\r\n                // spaceBetween: 25,\r\n                // loop: true,\r\n            },\r\n\r\n            414: {\r\n                slidesPerView: 1.5,\r\n                // spaceBetween: 25,\r\n                // loop: true,\r\n            },\r\n\r\n            769: {\r\n                slidesPerView: 2.5,\r\n                // loop: true,\r\n            },\r\n        },\r\n        navigation: {\r\n            nextEl: '.swiper-button-next',\r\n            prevEl: '.swiper-button-prev',\r\n        },\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n        }\r\n\r\n    });\r\n\r\n    // our capabilities Mobile-slider\r\n\r\n    (function () {\r\n        \"use strict\";\r\n        const breakpoint = window.matchMedia(\"(min-width:40.25em)\");\r\n\r\n        // keep track of swiper instances to destroy later\r\n        let mySwiper;\r\n\r\n        const breakpointChecker = function () {\r\n            // if larger viewport and multi-row layout needed\r\n            if (breakpoint.matches === true) {\r\n                // clean up old instances and inline styles when available\r\n                if (mySwiper !== undefined) mySwiper.destroy(true, true);\r\n\r\n                // or/and do nothing\r\n                return;\r\n\r\n                // else if a small viewport and single column layout needed\r\n            } else if (breakpoint.matches === false) {\r\n                // fire small viewport version of swiper\r\n                return enableSwiper();\r\n            }\r\n        };\r\n\r\n        // const enableSwiper = function () {\r\n        //     mySwiper = new Swiper(\".js-resp-capabilities\", {\r\n        //         loop: true,\r\n        //         slidesPerView: 1.5,\r\n        //         // a11y: true,\r\n        //         keyboardControl: true,\r\n        //         grabCursor: true,\r\n        //         autoplay: {\r\n        //             delay:1000,\r\n        //             disableOnInteraction: false,\r\n        //         },\r\n\r\n        //         // pagination\r\n        //         pagination: \".swiper-pagination\",\r\n        //         paginationClickable: true,\r\n        //     });\r\n        // };\r\n\r\n        var enableSwiper = function enableSwiper() {\r\n            mySwiper = new Swiper(\".js-resp-capabilities\", {                \r\n                slidesPerView: \"auto\",\r\n                centeredSlides: true,\r\n                slidesPerView: 1.5,\r\n                spaceBetween: 25,\r\n                loop: true,\r\n                speed: 2000,        \r\n                autoplay: {\r\n                    delay: 1000,                   \r\n                },\r\n                pagination: \".swiper-pagination\",\r\n                paginationClickable: true,\r\n            });\r\n        };\r\n\r\n        // keep an eye on viewport size changes\r\n        breakpoint.addListener(breakpointChecker);\r\n\r\n        // kickstart\r\n        breakpointChecker();\r\n    })(); /* IIFE end */\r\n\r\n\r\n    // $(\".sidebar li\").click(function (e) {\r\n    //     // $(\".sidebar li\").removeClass(\"active\");\r\n    //     alert(\"working\");\r\n    //     $(this).addClass(\"active\");\r\n    // });\r\n\r\n    var swiper = new Swiper(\".testimonial\", {\r\n        cssMode: true,\r\n        navigation: {\r\n          nextEl: \".swiper-button-next\",\r\n          prevEl: \".swiper-button-prev\",\r\n        },\r\n        pagination: {\r\n          el: \".swiper-pagination\",\r\n        },\r\n        // mousewheel: true,\r\n        keyboard: true,\r\n      });\r\n\r\n\r\n\r\n})\r\n\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}